<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:JsonViewer.Controls">

    <!-- VirtualizingTreeView 样式 -->
    <Style TargetType="{x:Type controls:VirtualizingTreeView}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemHeight" Value="22"/>
        <Setter Property="MaxVisibleItems" Value="200"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VirtualizingTreeView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      CanContentScroll="True"
                                      Focusable="False">
                            <Canvas x:Name="PART_ItemsHost"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeViewItemContainer 样式 -->
    <Style TargetType="{x:Type controls:TreeViewItemContainer}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeViewItemContainer}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <!-- 选中状态组 -->
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ItemBorder"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource SelectionBackgroundColor}"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <!-- 展开状态组 -->
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed"/>
                                <VisualState x:Name="Expanded"/>
                            </VisualStateGroup>
                            
                            <!-- 鼠标悬停状态组 -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ItemBorder"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{DynamicResource HoverBackgroundColor}"
                                                        Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Border x:Name="ItemBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" 
                                    Value="{DynamicResource SelectionBackgroundBrush}"/>
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource SelectionForegroundBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" 
                                    Value="{DynamicResource HoverBackgroundBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemBorder" Property="Background" 
                                    Value="{DynamicResource SelectedHoverBackgroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 默认颜色资源 -->
    <SolidColorBrush x:Key="SelectionBackgroundBrush" Color="#FF3399FF" Opacity="0.3"/>
    <SolidColorBrush x:Key="SelectionForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#FF666666" Opacity="0.2"/>
    <SolidColorBrush x:Key="SelectedHoverBackgroundBrush" Color="#FF3399FF" Opacity="0.4"/>
    
    <Color x:Key="SelectionBackgroundColor">#FF3399FF</Color>
    <Color x:Key="HoverBackgroundColor">#FF666666</Color>

</ResourceDictionary>